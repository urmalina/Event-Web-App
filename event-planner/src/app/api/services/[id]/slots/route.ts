import { NextRequest, NextResponse } from 'next/server'
import prisma from '@/lib/prisma'

export async function GET(
  req: NextRequest,
  context: { params: Promise<{ id: string }> } // üëà Next.js 15
) {
  try {
    const { id: serviceId } = await context.params // üëà await –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ

    const service = await prisma.service.findUnique({
      where: { id: serviceId },
      include: { availability: true },
    })

    if (!service) {
      return NextResponse.json({ message: '–£—Å–ª—É–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' }, { status: 404 })
    }

    if (!service.availability) {
      return NextResponse.json({ message: '–ù–µ—Ç –≥—Ä–∞—Ñ–∏–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏' }, { status: 200 })
    }

    const bookings = await prisma.booking.findMany({
      where: {
        serviceId,
        status: 'confirmed',
      },
      select: {
        startTime: true,
        endTime: true,
      },
    })

    return NextResponse.json({
      availability: service.availability,
      bookings,
    })
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ª–æ—Ç–æ–≤:', error)
    return NextResponse.json({ message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' }, { status: 500 })
  }
}
